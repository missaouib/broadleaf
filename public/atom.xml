<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JavaChen Blog</title>
  
  <subtitle>Ramblings of a coder</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.javachen.com/"/>
  <updated>2019-06-05T00:55:03.217Z</updated>
  <id>http://blog.javachen.com/</id>
  
  <author>
    <name>JavaChen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring Cloud之Eureka服务发现和注册示例</title>
    <link href="http://blog.javachen.com/2019/06/05/spring-cloud-eureka-service-discovery-and-register-example/"/>
    <id>http://blog.javachen.com/2019/06/05/spring-cloud-eureka-service-discovery-and-register-example/</id>
    <published>2019-06-05T00:53:25.000Z</published>
    <updated>2019-06-05T00:55:03.217Z</updated>
    
    <summary type="html">
    
      Spring Cloud之Eureka服务发现和注册示例代码，集成Feign。
    
    </summary>
    
      <category term="spring" scheme="http://blog.javachen.com/categories/spring/"/>
    
    
      <category term="spring cloud" scheme="http://blog.javachen.com/tags/spring-cloud/"/>
    
      <category term="eureka" scheme="http://blog.javachen.com/tags/eureka/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud之Eureka配置示例</title>
    <link href="http://blog.javachen.com/2019/04/15/spring-cloud-eureka-config-example/"/>
    <id>http://blog.javachen.com/2019/04/15/spring-cloud-eureka-config-example/</id>
    <published>2019-04-14T16:00:00.000Z</published>
    <updated>2019-05-09T12:56:44.515Z</updated>
    
    <summary type="html">
    
      Eureka是Netflix开源的服务发现组件，本身是一个基于REST的服务，包含Server和Client两部分，Spring Cloud将它集成在子项目Spring Cloud Netflix中，主要负责完成微服务架构中的服务治理功能。
    
    </summary>
    
      <category term="spring" scheme="http://blog.javachen.com/categories/spring/"/>
    
    
      <category term="spring cloud" scheme="http://blog.javachen.com/tags/spring-cloud/"/>
    
      <category term="eureka" scheme="http://blog.javachen.com/tags/eureka/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot整合视图层</title>
    <link href="http://blog.javachen.com/2019/04/07/spring-boot-with-web-view/"/>
    <id>http://blog.javachen.com/2019/04/07/spring-boot-with-web-view/</id>
    <published>2019-04-06T16:00:00.000Z</published>
    <updated>2019-04-07T04:43:15.000Z</updated>
    
    <summary type="html">
    
      Spring Boot整合视图层JSP、Freemarker、Thymeleaf。
    
    </summary>
    
      <category term="spring" scheme="http://blog.javachen.com/categories/spring/"/>
    
    
      <category term="spring boot" scheme="http://blog.javachen.com/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot整合Servlet、Filter、Listener</title>
    <link href="http://blog.javachen.com/2019/04/07/spring-boot-with-servlet-filter-listener/"/>
    <id>http://blog.javachen.com/2019/04/07/spring-boot-with-servlet-filter-listener/</id>
    <published>2019-04-06T16:00:00.000Z</published>
    <updated>2019-04-07T02:02:49.000Z</updated>
    
    <summary type="html">
    
      Spring Boot整合Servlet、Filter、Listener有两种方式：一是通过注解扫描完成；二是通过方法完成。
    
    </summary>
    
      <category term="spring" scheme="http://blog.javachen.com/categories/spring/"/>
    
    
      <category term="spring boot" scheme="http://blog.javachen.com/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix安装过程</title>
    <link href="http://blog.javachen.com/2019/03/29/install-zabbix/"/>
    <id>http://blog.javachen.com/2019/03/29/install-zabbix/</id>
    <published>2019-03-28T16:00:00.000Z</published>
    <updated>2019-03-29T07:41:57.000Z</updated>
    
    <summary type="html">
    
      记录Zabbix安装过程。
    
    </summary>
    
      <category term="devops" scheme="http://blog.javachen.com/categories/devops/"/>
    
    
      <category term="zabbix" scheme="http://blog.javachen.com/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>Cloudera Manager安装Haddop集群</title>
    <link href="http://blog.javachen.com/2019/03/28/install-hadoop-cluster-with-cm6/"/>
    <id>http://blog.javachen.com/2019/03/28/install-hadoop-cluster-with-cm6/</id>
    <published>2019-03-27T16:00:00.000Z</published>
    <updated>2019-06-01T15:14:11.525Z</updated>
    
    <summary type="html">
    
      在开始之前，请参考我博客中的关于如何安装cdh集群的文章，这里只做简单说明。因为只是为了测试，所以是在vagrant虚拟机中创建三个虚拟机搭建一个集群来安装cdh6。
    
    </summary>
    
      <category term="hadoop" scheme="http://blog.javachen.com/categories/hadoop/"/>
    
    
      <category term="hadoop" scheme="http://blog.javachen.com/tags/hadoop/"/>
    
      <category term="cdh" scheme="http://blog.javachen.com/tags/cdh/"/>
    
      <category term="vagrant" scheme="http://blog.javachen.com/tags/vagrant/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis源码分析：如何解析配置文件</title>
    <link href="http://blog.javachen.com/2016/04/21/how-to-parse-mybatis-configuration/"/>
    <id>http://blog.javachen.com/2016/04/21/how-to-parse-mybatis-configuration/</id>
    <published>2016-04-20T16:00:00.000Z</published>
    <updated>2019-03-27T13:00:58.000Z</updated>
    
    <summary type="html">
    
      MyBatis可以使用xml或者注解的方式进行配置，不管是哪种方式，最终会将获取到的配置参数设置到Configuration类中，例如，SqlSessionFactoryBuilder类中就是通过解析XML来创建Configuration。
    
    </summary>
    
      <category term="mybatis" scheme="http://blog.javachen.com/categories/mybatis/"/>
    
    
      <category term="mybatis" scheme="http://blog.javachen.com/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis源码分析：SqlSession</title>
    <link href="http://blog.javachen.com/2016/04/21/mybatis-sqlSession-source-code/"/>
    <id>http://blog.javachen.com/2016/04/21/mybatis-sqlSession-source-code/</id>
    <published>2016-04-20T16:00:00.000Z</published>
    <updated>2019-03-27T13:01:05.000Z</updated>
    
    <summary type="html">
    
      了解MyBatis中SqlSession类的实现过程。
    
    </summary>
    
      <category term="mybatis" scheme="http://blog.javachen.com/categories/mybatis/"/>
    
    
      <category term="mybatis" scheme="http://blog.javachen.com/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>UML类之间关系</title>
    <link href="http://blog.javachen.com/2016/04/01/uml-class-realation/"/>
    <id>http://blog.javachen.com/2016/04/01/uml-class-realation/</id>
    <published>2016-03-31T16:00:00.000Z</published>
    <updated>2019-06-01T07:39:23.498Z</updated>
    
    <summary type="html">
    
      前面两篇文章讲到了使用PlantUML来画类图，要想准确地画出类与类之间的关系，必须理清类和类之间的关系。
    
    </summary>
    
      <category term="java" scheme="http://blog.javachen.com/categories/java/"/>
    
    
      <category term="uml" scheme="http://blog.javachen.com/tags/uml/"/>
    
      <category term="plantuml" scheme="http://blog.javachen.com/tags/plantuml/"/>
    
  </entry>
  
  <entry>
    <title>PlantUML安装和使用</title>
    <link href="http://blog.javachen.com/2016/02/29/plantuml-install-and-usage/"/>
    <id>http://blog.javachen.com/2016/02/29/plantuml-install-and-usage/</id>
    <published>2016-02-28T16:00:00.000Z</published>
    <updated>2019-03-27T13:00:50.000Z</updated>
    
    <summary type="html">
    
      主要介绍什么是PlantUML，以及PlantUML的安装和使用。
    
    </summary>
    
      <category term="java" scheme="http://blog.javachen.com/categories/java/"/>
    
    
      <category term="uml" scheme="http://blog.javachen.com/tags/uml/"/>
    
      <category term="plantuml" scheme="http://blog.javachen.com/tags/plantuml/"/>
    
  </entry>
  
  <entry>
    <title>PlantUML类图</title>
    <link href="http://blog.javachen.com/2016/02/29/plantuml-class-diagram/"/>
    <id>http://blog.javachen.com/2016/02/29/plantuml-class-diagram/</id>
    <published>2016-02-28T16:00:00.000Z</published>
    <updated>2019-03-27T13:00:47.000Z</updated>
    
    <summary type="html">
    
      主要介绍如何使用PlantUML的语法生成类图。
    
    </summary>
    
      <category term="java" scheme="http://blog.javachen.com/categories/java/"/>
    
    
      <category term="uml" scheme="http://blog.javachen.com/tags/uml/"/>
    
      <category term="plantuml" scheme="http://blog.javachen.com/tags/plantuml/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis源码分析：Configuration</title>
    <link href="http://blog.javachen.com/2016/02/26/source-code-analytic-of-mybatis-configuration/"/>
    <id>http://blog.javachen.com/2016/02/26/source-code-analytic-of-mybatis-configuration/</id>
    <published>2016-02-25T16:00:00.000Z</published>
    <updated>2019-03-27T13:00:39.000Z</updated>
    
    <summary type="html">
    
      MyBatis的最基础和常用的是Configuration类，它负责保存MyBatis的一些设置参数。
    
    </summary>
    
      <category term="mybatis" scheme="http://blog.javachen.com/categories/mybatis/"/>
    
    
      <category term="mybatis" scheme="http://blog.javachen.com/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot Profile使用</title>
    <link href="http://blog.javachen.com/2016/02/22/profile-usage-in-spring-boot/"/>
    <id>http://blog.javachen.com/2016/02/22/profile-usage-in-spring-boot/</id>
    <published>2016-02-21T16:00:00.000Z</published>
    <updated>2019-03-27T13:00:33.000Z</updated>
    
    <summary type="html">
    
      本文主要了解Spring Boot 1.3.0新添加的spring-boot-devtools模块的使用，该模块主要是为了提高开发者开发Spring Boot应用的用户体验。
    
    </summary>
    
      <category term="spring" scheme="http://blog.javachen.com/categories/spring/"/>
    
    
      <category term="java" scheme="http://blog.javachen.com/tags/java/"/>
    
      <category term="spring boot" scheme="http://blog.javachen.com/tags/spring-boot/"/>
    
      <category term="spring" scheme="http://blog.javachen.com/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>DevTools in Spring Boot</title>
    <link href="http://blog.javachen.com/2016/02/22/devtools-in-spring-boot/"/>
    <id>http://blog.javachen.com/2016/02/22/devtools-in-spring-boot/</id>
    <published>2016-02-21T16:00:00.000Z</published>
    <updated>2019-03-27T13:00:31.000Z</updated>
    
    <summary type="html">
    
      本文主要了解Spring Boot 1.3.0新添加的spring-boot-devtools模块的使用，该模块主要是为了提高开发者开发Spring Boot应用的用户体验。
    
    </summary>
    
      <category term="spring" scheme="http://blog.javachen.com/categories/spring/"/>
    
    
      <category term="java" scheme="http://blog.javachen.com/tags/java/"/>
    
      <category term="spring boot" scheme="http://blog.javachen.com/tags/spring-boot/"/>
    
      <category term="spring" scheme="http://blog.javachen.com/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>Scala Reading List</title>
    <link href="http://blog.javachen.com/2016/01/23/scala-reading-list/"/>
    <id>http://blog.javachen.com/2016/01/23/scala-reading-list/</id>
    <published>2016-01-22T16:00:00.000Z</published>
    <updated>2019-03-26T08:41:24.000Z</updated>
    
    <summary type="html">
    
      Scala Reading List
    
    </summary>
    
      <category term="scala" scheme="http://blog.javachen.com/categories/scala/"/>
    
    
      <category term="scala" scheme="http://blog.javachen.com/tags/scala/"/>
    
  </entry>
  
  <entry>
    <title>Bash内部变量</title>
    <link href="http://blog.javachen.com/2015/07/09/bash-internal-variables/"/>
    <id>http://blog.javachen.com/2015/07/09/bash-internal-variables/</id>
    <published>2015-07-08T16:00:00.000Z</published>
    <updated>2019-03-26T08:41:24.000Z</updated>
    
    <summary type="html">
    
      整理Bash中存在一些内部变量。
    
    </summary>
    
      <category term="devops" scheme="http://blog.javachen.com/categories/devops/"/>
    
    
      <category term="bash" scheme="http://blog.javachen.com/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>Bash条件判断</title>
    <link href="http://blog.javachen.com/2015/07/08/bash-if-else/"/>
    <id>http://blog.javachen.com/2015/07/08/bash-if-else/</id>
    <published>2015-07-07T16:00:00.000Z</published>
    <updated>2019-03-26T08:41:24.000Z</updated>
    
    <summary type="html">
    
      每个完整并且合理的程序语言都具有条件判断的功能，并且可以根据条件测试的结果做下一步的处理。Bash有test命令、各种中括号和圆括号操作，和if/then结构。
    
    </summary>
    
      <category term="devops" scheme="http://blog.javachen.com/categories/devops/"/>
    
    
      <category term="bash" scheme="http://blog.javachen.com/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>Bash中的变量</title>
    <link href="http://blog.javachen.com/2015/07/07/bash-variable/"/>
    <id>http://blog.javachen.com/2015/07/07/bash-variable/</id>
    <published>2015-07-06T16:00:00.000Z</published>
    <updated>2019-03-26T08:41:24.000Z</updated>
    
    <summary type="html">
    
      变量是脚本编程中进行数据表现的一种方法。说白了，变量不过是计算机为了保留数据项，而在内存中分配的一个位置或一组位置的标识或名字。变量既可以出现在算术操作中，也可以出现在字符串分析过程中。
    
    </summary>
    
      <category term="devops" scheme="http://blog.javachen.com/categories/devops/"/>
    
    
      <category term="bash" scheme="http://blog.javachen.com/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>Bash中的特殊字符</title>
    <link href="http://blog.javachen.com/2015/07/06/bash-special-characters/"/>
    <id>http://blog.javachen.com/2015/07/06/bash-special-characters/</id>
    <published>2015-07-05T16:00:00.000Z</published>
    <updated>2019-03-26T08:41:24.000Z</updated>
    
    <summary type="html">
    
      本文根据《Advanced Bash Scripting Guide》这本书整理而来。Bash中，用在脚本和其他地方的字符叫做特殊字符。
    
    </summary>
    
      <category term="devops" scheme="http://blog.javachen.com/categories/devops/"/>
    
    
      <category term="bash" scheme="http://blog.javachen.com/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>Jekyll kramdown配置</title>
    <link href="http://blog.javachen.com/2015/06/30/jekyll-kramdown-config/"/>
    <id>http://blog.javachen.com/2015/06/30/jekyll-kramdown-config/</id>
    <published>2015-06-29T16:00:00.000Z</published>
    <updated>2019-03-27T13:00:18.000Z</updated>
    
    <summary type="html">
    
      之前博客是使用的redcarpet的markdown语法，现在想改为使用kramdown，这样就可以使用MathJax了。
    
    </summary>
    
      <category term="web" scheme="http://blog.javachen.com/categories/web/"/>
    
    
      <category term="jekyll" scheme="http://blog.javachen.com/tags/jekyll/"/>
    
      <category term="kramdown" scheme="http://blog.javachen.com/tags/kramdown/"/>
    
      <category term="markdown" scheme="http://blog.javachen.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>高级Bash脚本编程入门</title>
    <link href="http://blog.javachen.com/2015/06/29/advanced-bash-script-programming/"/>
    <id>http://blog.javachen.com/2015/06/29/advanced-bash-script-programming/</id>
    <published>2015-06-28T16:00:00.000Z</published>
    <updated>2019-03-26T08:41:24.000Z</updated>
    
    <summary type="html">
    
      最近在看《Advanced Bash Scripting Guide》这本书，第二章举了一个清除日志的例子，来讲述如何使用Bash进行编程并聊到了一些编程规范。本文主要是基于这部分内容记录我的读书笔记并整理一些相关知识点。
    
    </summary>
    
      <category term="devops" scheme="http://blog.javachen.com/categories/devops/"/>
    
    
      <category term="bash" scheme="http://blog.javachen.com/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>spark-shell脚本分析</title>
    <link href="http://blog.javachen.com/2015/06/26/spark-shell-command/"/>
    <id>http://blog.javachen.com/2015/06/26/spark-shell-command/</id>
    <published>2015-06-25T16:00:00.000Z</published>
    <updated>2019-03-26T08:41:24.000Z</updated>
    
    <summary type="html">
    
      本文主要分析spark-shell脚本的运行逻辑，涉及到spark-submit、spark-class等脚本的分析，希望通过分析脚本以了解spark中各个进程的参数、JVM参数和内存大小如何设置。
    
    </summary>
    
      <category term="spark" scheme="http://blog.javachen.com/categories/spark/"/>
    
    
      <category term="spark" scheme="http://blog.javachen.com/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>Scala中的对象</title>
    <link href="http://blog.javachen.com/2015/06/19/scala-object/"/>
    <id>http://blog.javachen.com/2015/06/19/scala-object/</id>
    <published>2015-06-18T16:00:00.000Z</published>
    <updated>2019-03-26T08:41:24.000Z</updated>
    
    <summary type="html">
    
      主要记录Scala中对象相关的知识点。Scala中没有静态方法或静态字段，但可以使用object这个语法结构来实现相同的功能。对象与类在语法层面上很相似，除了不能提供构造器参数外，对象可以拥有类的所有特性。
    
    </summary>
    
      <category term="scala" scheme="http://blog.javachen.com/categories/scala/"/>
    
    
      <category term="scala" scheme="http://blog.javachen.com/tags/scala/"/>
    
  </entry>
  
  <entry>
    <title>Scala中的类</title>
    <link href="http://blog.javachen.com/2015/06/19/scala-class/"/>
    <id>http://blog.javachen.com/2015/06/19/scala-class/</id>
    <published>2015-06-18T16:00:00.000Z</published>
    <updated>2019-03-26T08:41:24.000Z</updated>
    
    <summary type="html">
    
      阅读《Programming in Scala》，整理Scala类、继承、重载相关的一些知识点。
    
    </summary>
    
      <category term="scala" scheme="http://blog.javachen.com/categories/scala/"/>
    
    
      <category term="scala" scheme="http://blog.javachen.com/tags/scala/"/>
    
  </entry>
  
  <entry>
    <title>解决固定导航时锚点偏移问题</title>
    <link href="http://blog.javachen.com/2015/06/18/fix-anchor-offset-when-using-bootstrap-navbar-fixed-top/"/>
    <id>http://blog.javachen.com/2015/06/18/fix-anchor-offset-when-using-bootstrap-navbar-fixed-top/</id>
    <published>2015-06-17T16:00:00.000Z</published>
    <updated>2019-03-26T08:41:24.000Z</updated>
    
    <summary type="html">
    
      最近基于Bootstrap修改了博客主题，使其支持响应式布局，并且将导航菜单固定住，这样做带来的影响是，点击锚点链接后，锚点没有正确的定位，有一部分内容被导航遮挡住了。
    
    </summary>
    
      <category term="web" scheme="http://blog.javachen.com/categories/web/"/>
    
    
      <category term="web" scheme="http://blog.javachen.com/tags/web/"/>
    
      <category term="javascript" scheme="http://blog.javachen.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>使用Scala高价函数简化代码</title>
    <link href="http://blog.javachen.com/2015/06/18/simplify-code-using-scala-higher-order-function/"/>
    <id>http://blog.javachen.com/2015/06/18/simplify-code-using-scala-higher-order-function/</id>
    <published>2015-06-17T16:00:00.000Z</published>
    <updated>2019-03-26T08:41:24.000Z</updated>
    
    <summary type="html">
    
      阅读《Programming in Scala》整理的笔记。在Scala里，带有其他函数做参数的函数叫做高阶函数，使用高阶函数可以简化代码。
    
    </summary>
    
      <category term="scala" scheme="http://blog.javachen.com/categories/scala/"/>
    
    
      <category term="scala" scheme="http://blog.javachen.com/tags/scala/"/>
    
  </entry>
  
  <entry>
    <title>推荐系统笔记</title>
    <link href="http://blog.javachen.com/2015/06/15/note-about-recommendation-system/"/>
    <id>http://blog.javachen.com/2015/06/15/note-about-recommendation-system/</id>
    <published>2015-06-14T16:00:00.000Z</published>
    <updated>2019-03-26T08:41:24.000Z</updated>
    
    <summary type="html">
    
      整理推荐系统相关的笔记。
    
    </summary>
    
      <category term="mahout" scheme="http://blog.javachen.com/categories/mahout/"/>
    
    
      <category term="recommendation" scheme="http://blog.javachen.com/tags/recommendation/"/>
    
  </entry>
  
  <entry>
    <title>使用Mahout实现协同过滤</title>
    <link href="http://blog.javachen.com/2015/06/10/collaborative-filtering-using-mahout/"/>
    <id>http://blog.javachen.com/2015/06/10/collaborative-filtering-using-mahout/</id>
    <published>2015-06-09T16:00:00.000Z</published>
    <updated>2019-03-26T08:41:24.000Z</updated>
    
    <summary type="html">
    
      本文主要记录使用Mahout实现协同过滤过程中的一些笔记，主要是记录源码相关的，不包含原理性的说明。
    
    </summary>
    
      <category term="mahout" scheme="http://blog.javachen.com/categories/mahout/"/>
    
    
      <category term="mahout" scheme="http://blog.javachen.com/tags/mahout/"/>
    
      <category term="recommendation" scheme="http://blog.javachen.com/tags/recommendation/"/>
    
  </entry>
  
  <entry>
    <title>Spark On YARN内存分配</title>
    <link href="http://blog.javachen.com/2015/06/09/memory-in-spark-on-yarn/"/>
    <id>http://blog.javachen.com/2015/06/09/memory-in-spark-on-yarn/</id>
    <published>2015-06-08T16:00:00.000Z</published>
    <updated>2019-03-26T08:41:24.000Z</updated>
    
    <summary type="html">
    
      本文主要了解Spark On YARN部署模式下的内存分配情况。
    
    </summary>
    
      <category term="spark" scheme="http://blog.javachen.com/categories/spark/"/>
    
    
      <category term="spark" scheme="http://blog.javachen.com/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>Spark配置参数</title>
    <link href="http://blog.javachen.com/2015/06/07/spark-configuration/"/>
    <id>http://blog.javachen.com/2015/06/07/spark-configuration/</id>
    <published>2015-06-06T16:00:00.000Z</published>
    <updated>2019-03-26T08:41:24.000Z</updated>
    
    <summary type="html">
    
      本文主要整理Spark的相关配置参数，便于查询和方便调优。
    
    </summary>
    
      <category term="spark" scheme="http://blog.javachen.com/categories/spark/"/>
    
    
      <category term="spark" scheme="http://blog.javachen.com/tags/spark/"/>
    
  </entry>
  
</feed>
